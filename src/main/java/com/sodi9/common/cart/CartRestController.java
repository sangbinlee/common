package com.sodi9.common.cart;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController // This means that this class is a Controller
@RequestMapping(path = "/api/cart") // This means URL's start with /api (after Application path)
public class CartRestController {
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private CartRepository repository;

	@PostMapping // Map ONLY POST Requests
	public @ResponseBody String addNewUser(@RequestParam int memberId, @RequestParam int itemId) {
// @ResponseBody means the returned String is the response, not a view name
// @RequestParam means it is a parameter from the GET or POST request

		Cart n = new Cart();
		n.setMemberId(memberId);
		n.setItemId(itemId);
		repository.save(n);
		return "Saved";
	}

	@GetMapping
	public @ResponseBody Iterable<Cart> getAllUsers() {
// This returns a JSON or XML with the users
		return repository.findAll();
	}
	
	
	
	
	

//    @GetMapping("/{id}")
//    public ProductPojo getById(@PathVariable Long id) {
//        return productService.getByID(id);
//    }
//
//    @GetMapping
//    public Iterable<ProductPojo> getAll() {
//        return productService.getAll();
//    }
//
//    @PostMapping
//    public ProductPojo createProduct(@RequestBody ProductPojo product) {
//        return productService.createProduct(product);
//    }
//
//    @PutMapping
//    public ProductPojo update(@RequestBody ProductPojo product) {
//        return productService.update(product);
//
//    }
//
//    @DeleteMapping("/{id}")
//    public String remove(@PathVariable Long id) {
//        productService.remove(id);
//        return "Record delete successfully";
//    }
	
	
	
	
	
	
	
	
	
	
	
	
	
}
